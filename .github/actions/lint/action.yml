name: Code Quality Checks
description: 'Run linting and code quality checks'

inputs:
  sql_lint_path:
    description: 'Path to SQL files for linting'
    required: false
    default: 'models'
  sql_lint_config:
    description: 'Path to SQLFluff config file'
    required: false
    default: '.sqlfluff'
  sql_lint_version:
    description: 'SQLFluff version'
    required: false
    default: '3.3.1'
  github_token:
    description: 'GitHub token for authentication'
    required: true

runs:
  using: composite
  steps:
    - name: MegaLinter
      uses: oxsecurity/megalinter@v7
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        # Configuration pour fonctionner sur toutes les branches
        VALIDATE_ALL_CODEBASE: false        # Désactiver les linters problématiques et redondants
        DISABLE_LINTERS: REPOSITORY_TRUFFLEHOG,REPOSITORY_TRIVY,REPOSITORY_GRYPE,REPOSITORY_DEVSKIM,COPYPASTE_JSCPD,SPELL_CSPELL,REPOSITORY_CHECKOV,REPOSITORY_GITLEAKS,TEKTON_TEKTON_LINT,KUBERNETES_KUBECONFORM,ANSIBLE_ANSIBLE_LINT,ARM_ARM_TTK,CLOUDFORMATION_CFN_LINT,TERRAFORM_TFLINT,TERRAFORM_TERRASCAN,TERRAFORM_TERRAGRUNT
        # Configuration de sortie optimisée
        REPORT_OUTPUT_FOLDER: megalinter-reports
        LOG_LEVEL: INFO
        # Éviter les erreurs sur les fichiers ignorés
        FILTER_REGEX_EXCLUDE: '(\.git/|node_modules/|\.venv/|__pycache__/|dist/|build/|target/)'        # Performance : analyser seulement les fichiers modifiés sur les PR
        DEFAULT_BRANCH: ${{ github.event.repository.default_branch || 'main' }}
        # Optimisation des performances
        PARALLEL_PROCESS_NUMBER: 4
        # Configuration pour les PR et commits
        MEGALINTER_CONFIG: |
          SHOW_ELAPSED_TIME: true
          FILEIO_REPORTER: false
          UPDATED_SOURCES_REPORTER: false          # Focus sur les linters essentiels pour le code quality
          ENABLE_LINTERS:
            - ACTION_ACTIONLINT
            - YAML_YAMLLINT
            - YAML_PRETTIER
            - YAML_V8R
            - JSON_JSONLINT
            - JSON_PRETTIER
            - JAVASCRIPT_ES
            - TYPESCRIPT_ES
            - PYTHON_FLAKE8
            - PYTHON_BLACK
            - JAVA_CHECKSTYLE
            - MARKDOWN_MARKDOWNLINT
            - DOCKERFILE_HADOLINT
            - SPELL_LYCHEE
            - GIT_GIT_DIFF
            - REPOSITORY_DUSTILOCK
            - REPOSITORY_SYFT

    - name: Run SQL Lint
      if: hashFiles('**/*.sql')
      uses: yu-iskw/action-sqlfluff@v4
      with:
        github_token: ${{ inputs.github_token }}
        reporter: github-pr-review
        sqlfluff_version: ${{ inputs.sql_lint_version }}
        sqlfluff_command: "fix"
        config: "${{ github.workspace }}/${{ inputs.sql_lint_config }}"
        paths: "${{ github.workspace }}/${{ inputs.sql_lint_path }}"
