name: Build
description: 'Build the project based on its type'

inputs:
  java_version:
    description: 'Java version to use'
    required: false
    default: '21'
  node_version:
    description: 'Node.js version to use'
    required: false
    default: '22'
  build_options:
    description: 'Additional build options'
    required: false
    default: ''
  build_type:
    description: 'Build type for Java projects (legacy or native)'
    required: false
    default: 'legacy'
  build_platform:
    description: 'Target platform for native builds (arm64 or x86)'
    required: false
    default: 'x86'
  docker_username:
    description: 'Docker Hub username for pushing images'
    required: false
  docker_token:
    description: 'Docker Hub token for authentication'
    required: false

runs:
  using: composite
  steps:
    - name: Set up JDK for Java projects
      uses: actions/setup-java@v3
      if: hashFiles('pom.xml') != '' || hashFiles('build.gradle') != ''
      with:
        java-version: ${{ inputs.java_version }}
        distribution: 'temurin'
        cache: maven

    - name: Install native build dependencies
      if: inputs.build_type == 'native' && (hashFiles('pom.xml') != '' || hashFiles('build.gradle') != '')
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y binfmt-support qemu-user-static

    - name: Legacy Maven Build
      if: inputs.build_type == 'legacy' && hashFiles('pom.xml') != ''
      shell: bash
      run: mvn -B package --file pom.xml ${{ inputs.build_options }}

    - name: Native Maven Build
      if: inputs.build_type == 'native' && hashFiles('pom.xml') != ''
      shell: bash
      run: |
        mvn clean package \
        -Dnative -DskipTests \
        -Dquarkus.native.container-build=true \
        -Dquarkus.native.container-runtime-options=--platform=linux/${{ inputs.build_platform }} \
        -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-${{ inputs.java_version }} \
        ${{ inputs.build_options }}

    - name: Upload native artifact
      if: inputs.build_type == 'native' && hashFiles('pom.xml') != ''
      uses: actions/upload-artifact@v4
      with:
        name: artifact-${{ inputs.build_platform }}
        path: target

    - name: Set up QEMU
      if: inputs.build_type == 'native' && inputs.docker_username != ''
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      if: inputs.build_type == 'native' && inputs.docker_username != ''
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      if: inputs.build_type == 'native' && inputs.docker_username != ''
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_token }}

    - name: Get version from tag
      if: inputs.build_type == 'native' && inputs.docker_username != ''
      shell: bash
      run: |
        BASE_VERSION=${GITHUB_REF#refs/tags/v}
        BRANCH_NAME=${GITHUB_REF#refs/heads/}
        if [ "$BRANCH_NAME" != "main" ]; then
          echo "version=${BASE_VERSION}-SNAPSHOT" >> $GITHUB_ENV
        else
          echo "version=${BASE_VERSION}" >> $GITHUB_ENV
        fi

    - name: Download artifacts for Docker
      if: inputs.build_type == 'native' && inputs.docker_username != ''
      uses: actions/download-artifact@v4
      with:
        name: artifact-${{ inputs.build_platform }}
        path: target

    - name: Build native Docker image
      if: inputs.build_type == 'native' && inputs.docker_username != ''
      uses: docker/build-push-action@v6
      with:
        context: ./target/
        file: ./src/main/docker/Dockerfile.native-micro
        platforms: linux/${{ inputs.build_platform }}
        push: true
        tags: |
          ${{ vars.DOCKER_IMAGE_NAME }}:${{ env.version }}-${{ inputs.build_platform }}

    - name: Legacy Gradle Build
      if: inputs.build_type == 'legacy' && hashFiles('build.gradle') != ''
      shell: bash
      run: ./gradlew build ${{ inputs.build_options }}

    - name: Native Gradle Build
      if: inputs.build_type == 'native' && hashFiles('build.gradle') != ''
      shell: bash
      run: |
        ./gradlew build -Dquarkus.package.type=native \
        -Dquarkus.native.container-build=true \
        -Dquarkus.native.container-runtime-options=--platform=linux/${{ inputs.build_platform }} \
        ${{ inputs.build_options }}

    - name: Set up Node.js
      if: hashFiles('package.json') != ''
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node_version }}
        cache: npm

    - name: Install Node dependencies
      if: hashFiles('package.json') != ''
      shell: bash
      run: npm ci

    - name: Build Angular project
      if: hashFiles('angular.json') != ''
      shell: bash
      run: npm run build -- ${{ inputs.build_options }}
