name: Java Build
description: 'Build Java projects with support for native and legacy builds'

inputs:
  java_version:
    description: 'Java version to use'
    required: false
    default: '21'
  build_options:
    description: 'Additional build options'
    required: false
    default: ''
  build_type:
    description: 'Build type (legacy or native)'
    required: false
    default: 'legacy'
  build_platform:
    description: 'Target platform for native builds (arm64 or amd64)'
    required: false
    default: 'amd64'
  docker_username:
    description: 'Docker Hub username for pushing images'
    required: false
  docker_token:
    description: 'Docker Hub token for authentication'
    required: false
  docker_image_name:
    description: 'Docker image name with repository (e.g. username/repo)'
    required: true
  is_quarkus:
    description: 'Whether the project is a Quarkus project'
    required: false
    default: 'false'
  tag:
    description: 'Override version tag (takes precedence over Git tags and commit SHA)'
    required: false

runs:
  using: composite
  steps:
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.java_version }}
        distribution: 'temurin'
        cache: maven

    - name: Install native build dependencies
      if: inputs.build_type == 'native'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y binfmt-support qemu-user-static

    - name: Legacy Maven Build
      if: inputs.build_type == 'legacy' && hashFiles('pom.xml') != ''
      shell: bash
      run: mvn -B package --file pom.xml ${{ inputs.build_options }}

    - name: Check Quarkus for Native Build
      if: inputs.build_type == 'native'
      shell: bash
      run: |
        if [ "${{ inputs.is_quarkus }}" != "true" ]; then
          echo "::error::Native build is only supported for Quarkus projects"
          exit 1
        fi

    - name: Native Maven Build
      if: inputs.build_type == 'native' && inputs.is_quarkus == 'true' && hashFiles('pom.xml') != ''
      shell: bash
      run: |
        mvn clean package \
        -Dnative -DskipTests \
        -Dquarkus.native.container-build=true \
        -Dquarkus.native.container-runtime-options=--platform=linux/${{ inputs.build_platform }} \
        -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-${{ inputs.java_version }} \
        ${{ inputs.build_options }}

    - name: Legacy Gradle Build
      if: inputs.build_type == 'legacy' && hashFiles('build.gradle') != ''
      shell: bash
      run: ./gradlew build ${{ inputs.build_options }}

    - name: Native Gradle Build
      if: inputs.build_type == 'native' && inputs.is_quarkus == 'true' && hashFiles('build.gradle') != ''
      shell: bash
      run: |
        ./gradlew build -Dquarkus.package.type=native \
        -Dquarkus.native.container-build=true \
        -Dquarkus.native.container-runtime-options=--platform=linux/${{ inputs.build_platform }} \
        ${{ inputs.build_options }}

    - name: Upload native artifact
      if: inputs.build_type == 'native' && inputs.is_quarkus == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: artifact-java-${{ inputs.build_platform }}
        path: target

    - name: Set up QEMU
      if: inputs.build_type == 'native' && inputs.is_quarkus == 'true' && inputs.docker_username != ''
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      if: inputs.build_type == 'native' && inputs.is_quarkus == 'true' && inputs.docker_username != ''
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      if: inputs.build_type == 'native' && inputs.is_quarkus == 'true' && inputs.docker_username != ''
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_token }}

    - name: Get version
      if: inputs.build_type == 'native' && inputs.is_quarkus == 'true' && inputs.docker_username != ''
      shell: bash
      run: |
        # Check if tag input is provided
        if [ -n "${{ inputs.tag }}" ]; then
          VERSION="${{ inputs.tag }}"
        else
          # Check if we're on a tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            # Use short commit SHA
            VERSION=$(git rev-parse --short HEAD)
          fi

          # Add snapshot suffix if not on main branch
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [ "$BRANCH_NAME" != "main" ]; then
            VERSION="${VERSION}-snapshot"
          fi
        fi
        echo "version=${VERSION}" >> $GITHUB_ENV

    - name: Build and push Docker image
      if: inputs.build_type == 'native' && inputs.is_quarkus == 'true' && inputs.docker_username != ''
      uses: docker/build-push-action@v6
      with:
        context: ./target/
        file: ./src/main/docker/Dockerfile.native-micro
        platforms: linux/${{ inputs.build_platform }}
        push: true
        tags: |
          ${{ inputs.docker_image_name }}:${{ env.version }}
