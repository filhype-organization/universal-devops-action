name: Get Context
description: 'Get project context to determine language and framework'

inputs:
  working-directory:
    description: 'Directory containing the project to analyze'
    required: true
    default: '.'

outputs:
  java:
    description: 'Whether Java is detected'
    value: ${{ steps.project-type.outputs.java }}
  pom:
    description: 'Whether pom.xml is detected'
    value: ${{ steps.project-type.outputs.pom }}
  gradle:
    description: 'Whether build.gradle is detected'
    value: ${{ steps.project-type.outputs.gradle }}
  angular:
    description: 'Whether Angular is detected'
    value: ${{ steps.project-type.outputs.angular }}
  spring:
    description: 'Whether Spring Boot is detected'
    value: ${{ steps.project-type.outputs.spring }}
  quarkus:
    description: 'Whether Quarkus is detected'
    value: ${{ steps.project-type.outputs.quarkus }}
  outputs:
    description: 'JSON object with all detected technologies'
    value: ${{ steps.project-type.outputs.outputs }}

runs:
  using: composite
  steps:
    - id: project-type
      shell: bash
      run: |
        cd ${{ inputs.working-directory }}
        
        echo "🔍 Analyzing project in directory: $(pwd)"
        echo "📁 Directory contents:"
        ls -la
        
        # Initialize individual outputs
        echo "java=false" >> $GITHUB_OUTPUT
        echo "pom=false" >> $GITHUB_OUTPUT
        echo "gradle=false" >> $GITHUB_OUTPUT
        echo "angular=false" >> $GITHUB_OUTPUT
        echo "spring=false" >> $GITHUB_OUTPUT
        echo "quarkus=false" >> $GITHUB_OUTPUT

        # Réinitialisation des variables en JSON
        outputs='{"java":false,"pom":false,"gradle":false,"angular":false,"spring":false,"quarkus":false}'

        # Fonction de détection
        detect_frameworks() {
          local file=$1
          echo "🔍 Analyzing $file for frameworks..."
          if grep -q "org.springframework.boot" "$file"; then
            echo "✅ Spring Boot detected in $file"
            outputs=$(echo "$outputs" | jq '. + {"spring": true}')
            echo "spring=true" >> $GITHUB_OUTPUT
          fi
          if grep -q "io.quarkus" "$file"; then
            echo "✅ Quarkus detected in $file"
            outputs=$(echo "$outputs" | jq '. + {"quarkus": true}')
            echo "quarkus=true" >> $GITHUB_OUTPUT
          fi
        }

        # Détection principale
        if [ -f "pom.xml" ]; then
          echo "✅ Maven project detected (pom.xml found)"
          outputs=$(echo "$outputs" | jq '. + {"java": true, "pom": true}')
          echo "java=true" >> $GITHUB_OUTPUT
          echo "pom=true" >> $GITHUB_OUTPUT
          detect_frameworks "pom.xml"
        elif [ -f "build.gradle" ] || [ -f "build.gradle.kts" ]; then
          echo "✅ Gradle project detected (build.gradle found)"
          outputs=$(echo "$outputs" | jq '. + {"java": true, "gradle": true}')
          echo "java=true" >> $GITHUB_OUTPUT
          echo "gradle=true" >> $GITHUB_OUTPUT
          if [ -f "build.gradle" ]; then
            detect_frameworks "build.gradle"
          else
            detect_frameworks "build.gradle.kts"
          fi
        elif [ -f "angular.json" ]; then
          echo "✅ Angular project detected (angular.json found)"
          outputs=$(echo "$outputs" | jq '. + {"angular": true}')
          echo "angular=true" >> $GITHUB_OUTPUT
        else
          echo "ℹ️ No specific project type detected"
        fi

        # Export final en une seule commande
        outputs=$(echo "$outputs" | jq -c '.')
        echo "outputs=$outputs" >> $GITHUB_OUTPUT
        echo "🎯 Final detection results: $outputs"
