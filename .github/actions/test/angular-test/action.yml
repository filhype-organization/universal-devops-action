name: Angular Tests
description: 'Run tests for Angular projects'

inputs:
  test_options:
    description: 'Additional options for test commands'
    required: false
    default: ''
  node_version:
    description: 'Node.js version to use'
    required: false
    default: '22'

runs:
  using: composite
  steps:
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node_version }}
        cache: 'npm'    
        
    - name: Install dependencies
      shell: bash
      run: npm ci

    - name: Check for test files
      shell: bash
      run: |
        if find . -name "*.spec.ts" | head -1 | grep -q .; then
          echo "Test files found"
          echo "has_tests=true" >> $GITHUB_OUTPUT
        else
          echo "No test files found - skipping tests"
          echo "has_tests=false" >> $GITHUB_OUTPUT
        fi
      id: check-tests

    - name: Configure Karma for CI
      shell: bash
      if: steps.check-tests.outputs.has_tests == 'true'
      run: |
        # Check if karma.conf.js exists and backup if needed
        if [ -f karma.conf.js ]; then
          # Check if singleRun is already configured
          if ! grep -q "singleRun.*true" karma.conf.js; then
            echo "Adding CI configuration to karma.conf.js"
            # Create a temporary patch to ensure singleRun: true in CI
            sed -i.bak 's/singleRun: false/singleRun: true/g' karma.conf.js
          fi
        fi

    - name: Run tests
      shell: bash
      if: steps.check-tests.outputs.has_tests == 'true'
      run: npm test -- --watch=false --progress=false --browsers=ChromeHeadless ${{ inputs.test_options }}

    - name: Restore Karma config
      shell: bash
      if: steps.check-tests.outputs.has_tests == 'true' && always()
      run: |
        # Restore original karma.conf.js if backup exists
        if [ -f karma.conf.js.bak ]; then
          mv karma.conf.js.bak karma.conf.js
        fi

    - name: Skip tests message
      shell: bash
      if: steps.check-tests.outputs.has_tests == 'false'
      run: echo "⚠️ No test files found - skipping Angular tests"
