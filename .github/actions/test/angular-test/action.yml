name: Angular Tests
description: 'Run tests for Angular projects'

inputs:
  test_options:
    description: 'Additional options for test commands'
    required: false
    default: ''
  node_version:
    description: 'Node.js version to use'
    required: false
    default: '22'

runs:
  using: composite
  steps:
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node_version }}
        cache: 'npm'    
        
    - name: Install dependencies
      shell: bash
      run: npm ci

    - name: Check for test files
      shell: bash
      run: |
        if find . -name "*.spec.ts" | head -1 | grep -q .; then
          echo "Test files found"
          echo "has_tests=true" >> $GITHUB_OUTPUT
        else
          echo "No test files found - skipping tests"
          echo "has_tests=false" >> $GITHUB_OUTPUT
        fi
      id: check-tests

    - name: Configure Karma for CI
      shell: bash
      if: steps.check-tests.outputs.has_tests == 'true'
      run: |
        # Check if karma.conf.js exists and backup if needed
        if [ -f karma.conf.js ]; then
          echo "Backing up karma.conf.js"
          cp karma.conf.js karma.conf.js.bak
          
          # Create a temporary karma config patch for CI
          cat > karma.ci.patch.js << 'EOF'
        // CI-specific Karma configuration
        const originalConfig = require('./karma.conf.js.bak');
        
        module.exports = function(config) {
          originalConfig(config);
          
          // Override settings for CI
          config.set({
            singleRun: true,
            browsers: ['ChromeHeadlessNoSandbox'],
            customLaunchers: {
              ChromeHeadlessNoSandbox: {
                base: 'ChromeHeadless',
                flags: ['--no-sandbox', '--disable-gpu', '--disable-dev-shm-usage']
              }
            }
          });
        };
        EOF
          
          # Replace karma.conf.js with CI version
          mv karma.ci.patch.js karma.conf.js
        else
          echo "No karma.conf.js found, using CLI options only"
        fi

    - name: Run tests
      shell: bash
      if: steps.check-tests.outputs.has_tests == 'true'
      run: npm test -- --watch=false --progress=false

    - name: Restore Karma config
      shell: bash
      if: always()
      run: |
        # Restore original karma.conf.js if backup exists
        if [ -f karma.conf.js.bak ]; then
          echo "Restoring original karma.conf.js"
          mv karma.conf.js.bak karma.conf.js
        fi

    - name: Skip tests message
      shell: bash
      if: steps.check-tests.outputs.has_tests == 'false'
      run: echo "⚠️ No test files found - skipping Angular tests"
