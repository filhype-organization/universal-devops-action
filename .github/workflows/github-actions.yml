name: Reusable workflow

on:
  workflow_call:
    inputs:
      build_options:
        description: 'Additional options build commands'
        required: false
        type: string
        default: ''
      test_options:
        description: 'Additional options test commands'
        required: false
        type: string
        default: ''
      java_version:
        description: 'Java version'
        required: false
        type: string
        default: '21'
      node_version:
        description: 'Node.js version'
        required: false
        type: string
        default: '22'
      build_type:
        description: 'Build type for Java projects (legacy or native)'
        required: false
        type: string
        default: 'legacy'
      build_platform:
        description: 'Target platform for container builds (arm64 or x86)'
        required: false
        type: string
        default: 'x86'
      container_build:
        description: 'Whether to build and push container image for Angular'
        required: false
        type: boolean
        default: false
      sql_lint_path:
        description: 'Path to SQL files for linting'
        required: false
        type: string
        default: 'models'
      sql_lint_config:
        description: 'Path to SQLFluff config file'
        required: false
        type: string
        default: '.sqlfluff'
      trufflehog_args:
        description: 'Additional arguments for TruffleHog'
        required: false
        type: string
        default: '--results=verified,unknown'
      docker_image_name:
        description: 'Docker image name (required for container builds)'
        required: false
        type: string
      sha-branch:
        description: 'Branch SHA or branch name'
        required: false
        type: string
        default: 'main'
    secrets:
      GH_TOKEN:
        description: 'GitHub token for authentication'
        required: true
      DOCKER_USERNAME:
        required: false
      DOCKER_TOKEN:
        required: false
    outputs:
      firstword:
        description: "The first output string"
        value: ${{ jobs.example_job.outputs.output1 }}
      secondword:
        description: "The second output string"
        value: ${{ jobs.example_job.outputs.output2 }}

jobs:
  example_job:
    name: Generate output
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      output1: ${{ steps.step1.outputs.firstword }}
      output2: ${{ steps.step2.outputs.secondword }}
    steps:
      - id: step1
        run: echo "firstword=hello" >> $GITHUB_OUTPUT
      - id: step2
        run: echo "secondword=world" >> $GITHUB_OUTPUT
      - name: Get Context
        id: project-type
        uses: filhype-organization/universal-devops-action/.github/actions/get-context@${{ inputs.sha-branch }}
